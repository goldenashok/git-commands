
git status --> to check which files has been changed
git add <file path> --> add files to staged area from unstaged
git add .  --> add all file to staged area from unstaged
git commit -m "Mesage" --> Commit changed files and changes (create a checkpoint) 
git push --> Push commit to remote url (github or similar)
git stash pop = git stash apply + git stash drop
git pull --> pull updates from the remote (update local repository with remote)
git commit --amend --> Edit commit message (only for the latest/last commit)
git stash -> Save the changed files
git stash apply -> Apply the saved copy files
git log --> to show commit history in command line
git branch -a --> to show branches available
git branch -D <branch name> --> to delete a branch

git cherry-pick
Step 1 - Note which commits from master you want on a newbranch Execute

git checkout master
git log
Note the hashes of (say 3) commits you want on newbranch. Here I shall use:
C commit: 9aa1233
D commit: 453ac3d
E commit: 612ecb3

Note: You can use the first seven characters or the whole commit hash

Step 2 - Put them on the newbranch
git checkout newbranch
git cherry-pick 612ecb3
git cherry-pick 453ac3d
git cherry-pick 9aa1233
